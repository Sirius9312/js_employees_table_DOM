{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","table","header","tbody","Form","createElement","isSortingAscDesc","selectedIndexColumnForSort","activeTrRow","formFieldsAttributes","label","dataSet","element","type","selectOffices","sortTableByColumn","index","activeRows","querySelectorAll","sortArr","sortByColumn","y","children","length","x","textContent","isActiveRow","classList","remove","add","arr","map","r","c","sort","a","b","it1","it2","formattingSalaryForSort","localeCompare","str","slice","replace","indexColumn","item","every","createForm","form","className","fieldAttributes","Label","input","name","dataset","qa","selectOffice","option","required","append","button","notification","typeClass","titlE","text","notificationBlock","title","style","whiteSpace","desc","setTimeout","margin","addEventListener","e","target","closest","contains","i","push","preventDefault","parentNode","findIndex","Name","value","Position","position","Office","office","Age","age","Salary","salary","trim","numberFormatter","Intl","NumberFormat","salar","format","newEmployee","newTr","key","newTd"],"mappings":"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","file":"main.f502ad2b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst table = document.querySelector('table');\nconst header = document.querySelector('thead tr');\nconst tbody = document.querySelector('tbody');\nconst Form = document.createElement('form');\nlet isSortingAscDesc = false;\nlet selectedIndexColumnForSort = -1;\nconst activeTrRow = [];\n\nconst formFieldsAttributes = [\n  {\n    label: 'Name:', dataSet: 'name', element: 'input', type: 'text',\n  },\n  {\n    label: 'Position:', dataSet: 'position', element: 'input', type: 'text',\n  },\n  {\n    label: 'Office:', dataSet: 'office', element: 'select',\n  },\n  {\n    label: 'Age:', dataSet: 'age', element: 'input', type: 'number',\n  },\n  {\n    label: 'Salary:', dataSet: 'salary', element: 'input', type: 'number',\n  },\n];\n\nconst selectOffices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\ntable.style.margin = '0 0 auto';\n\ncreateForm(Form);\n\ntbody.addEventListener('click', (e) => {\n  const item = e.target.closest('tr');\n  const activeRows = document.querySelectorAll('.active');\n\n  if (!item || !tbody.contains(item)) {\n    return;\n  }\n\n  activeTrRow.length = 0;\n\n  for (let i = 0; i < item.children.length; i++) {\n    activeTrRow.push(item.children[i].textContent);\n  }\n\n  if ([...activeRows].length > 0) {\n    [...activeRows][0].classList.remove('active');\n  }\n\n  item.classList.add('active');\n});\n\nheader.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const index = [...e.target.parentNode.children]\n    .findIndex(item => item === e.target);\n\n  if (selectedIndexColumnForSort !== index) {\n    isSortingAscDesc = false;\n    selectedIndexColumnForSort = index;\n  } else if (!isSortingAscDesc) {\n    isSortingAscDesc = true;\n  } else if (isSortingAscDesc) {\n    isSortingAscDesc = false;\n  }\n\n  sortTableByColumn(index);\n});\n\nForm.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const Name = e.target.name.value;\n  const Position = e.target.position.value;\n  const Office = e.target.office.value;\n  const Age = e.target.age.value;\n  const Salary = e.target.salary.value;\n\n  if (Name.trim().length < 5) {\n    notification(\n      'error',\n      'Error',\n      'The Name field must have at least 5 characters.',\n    );\n\n    return;\n  }\n\n  if (!Position.trim()) {\n    notification(\n      'error',\n      'Error',\n      'The Position field cannot be empty.',\n    );\n\n    return;\n  }\n\n  if (+Age < 18 || +Age > 90) {\n    notification(\n      'error',\n      'Error',\n      'The Age field must be no less than 18 and no more than 90.',\n    );\n\n    return;\n  }\n\n  if (+Salary < 1) {\n    notification(\n      'error',\n      'Error',\n      'The Salary field must be no less than 1 dollar',\n    );\n\n    return;\n  }\n\n  const numberFormatter = Intl.NumberFormat('en-US');\n  const salar = `$${numberFormatter.format(Salary)}`;\n\n  const newEmployee = {\n    name: Name.trim(),\n    position: Position.trim(),\n    office: Office,\n    age: Age,\n    salary: salar,\n  };\n\n  const newTr = document.createElement('tr');\n\n  for (const key in newEmployee) {\n    const newTd = document.createElement('td');\n\n    newTd.textContent = newEmployee[key];\n    newTr.append(newTd);\n  }\n\n  tbody.append(newTr);\n\n  notification('succes', 'Success', 'New employee added successfully');\n\n  e.target.name.value = '';\n  e.target.position.value = '';\n  e.target.office.value = selectOffices[0];\n  e.target.age.value = '';\n  e.target.salary.value = '';\n});\n\nfunction sortTableByColumn(index) {\n  const activeRows = document.querySelectorAll('.active');\n  const sortArr = sortByColumn(index);\n\n  for (let y = 0; y < [...tbody.children].length; y++) {\n    for (let x = 0; x < [...tbody.children][y].children.length; x++) {\n      [...tbody.children][y].children[x].textContent = sortArr[y][x];\n    }\n\n    if (isActiveRow(y)) {\n      if ([...activeRows].length > 0) {\n        [...activeRows][0].classList.remove('active');\n      }\n\n      [...tbody.children][y].classList.add('active');\n    }\n  }\n}\n\nfunction sortByColumn(index) {\n  const arr = [...tbody.children]\n    .map(r => [...r.children].map(c => c.textContent))\n    .sort((a, b) => {\n      const [it1, it2] = isSortingAscDesc ? [b, a] : [a, b];\n\n      switch (index) {\n        case 4: {\n          return formattingSalaryForSort(it1[index])\n            - (formattingSalaryForSort(it2[index]));\n        }\n\n        default:\n          return it1[index].localeCompare(it2[index]);\n      }\n    });\n\n  return arr;\n}\n\nfunction formattingSalaryForSort(str) {\n  return +str.slice(1).replace(/,/g, '.');\n}\n\nfunction isActiveRow(indexColumn) {\n  return [...[...tbody.children][indexColumn].children]\n    .map((item, index) => item.textContent === activeTrRow[index])\n    .every(item => item);\n}\n\nfunction createForm(form) {\n  form.className = 'new-employee-form';\n\n  for (const fieldAttributes of formFieldsAttributes) {\n    const { label, dataSet, element, type } = fieldAttributes;\n    const Label = document.createElement('label');\n\n    Label.textContent = label;\n\n    const input = document.createElement(element);\n\n    if (element === 'select') {\n      input.name = dataSet;\n      input.dataset.qa = dataSet;\n\n      for (const selectOffice of selectOffices) {\n        const option = document.createElement('option');\n\n        option.textContent = selectOffice;\n        input.required = true;\n        input.append(option);\n      }\n    } else {\n      input.type = type;\n      input.name = dataSet;\n      input.dataset.qa = dataSet;\n      input.required = true;\n    }\n\n    Label.append(input);\n\n    form.append(Label);\n  }\n\n  const button = document.createElement('button');\n\n  button.type = 'submit';\n  button.textContent = 'Save to Table';\n  form.append(button);\n\n  body.append(form);\n}\n\nfunction notification(typeClass, titlE, text) {\n  const notificationBlock = document.createElement('div');\n\n  notificationBlock.dataset.qa = 'notification';\n  notificationBlock.className = `notification ${typeClass}`;\n\n  const title = document.createElement('h2');\n\n  title.classList = 'title';\n  title.textContent = titlE;\n  title.style.whiteSpace = 'nowrap';\n  notificationBlock.append(title);\n\n  const desc = document.createElement('p');\n\n  desc.textContent = text;\n  notificationBlock.append(desc);\n\n  body.append(notificationBlock);\n\n  setTimeout(() => {\n    notificationBlock.remove();\n  }, 3000);\n}\n"]}